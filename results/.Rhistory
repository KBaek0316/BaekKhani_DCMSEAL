library(dplyr)
library(forcats)
library(ggplot2)
library(dplyr)
library(forcats)
library(ggplot2)
library(tidyr)
library(viridis)
library(scales)
library(introdataviz) #to install: library (devtools) devtools::install_github("psyteachr/introdataviz")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
fpath="../outputs/Round 2 Trial 3/"
# Stage 1: Feature Engineering -----
settingcols<-c('opt','timeOpt','locOpt','catOpt','encDim','denom')
rescols<-c('bestobj','objmean','objsd','meantop5','meanbottom5')
l<-list.files(path=fpath,pattern=".*Tuning.csv")
for (i in 1:length(l)){
dftemp<-read.csv(paste0(fpath,l[i]),1)
dftemp<-dftemp %>% select(all_of(c("globalInd","modelOpt",settingcols,rescols)))
if (i==1){
df<-dftemp
} else{
df<-rbind(df,dftemp)
}
}
library(dplyr)
library(forcats)
library(ggplot2)
library(tidyr)
library(viridis)
library(scales)
library(introdataviz) #to install: library (devtools) devtools::install_github("psyteachr/introdataviz")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df<-read.csv("result1.csv")
View(df)
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(rank<100)
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<100)
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<100 & mode=="DCMSEAL")
View(df)
dftemp$top5<-0
dftemp[dftemp$Rank<6,'top5']<-1
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=top5,color=params_num_hidden_layers))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.98, 0.02),
legend.justification = c(1, 0),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
dftemp$top5<-as.factor(dftemp$top5)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=top5,color=params_num_hidden_layers))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.98, 0.02),
legend.justification = c(1, 0),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<100 & mode=="DCMSEAL")
dftemp$top5<-'No'
dftemp[dftemp$Rank<6,'top5']<-'Yes'
dftemp$nhidden<-as.factor(dftemp$params_num_hidden_layers)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top5))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.98, 0.02),
legend.justification = c(1, 0),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<180 & mode=="DCMSEAL")
dftemp$top5<-'No'
dftemp[dftemp$Rank<6,'top5']<-'Yes'
dftemp$nhidden<-as.factor(dftemp$params_num_hidden_layers)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top5))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.98, 0.02),
legend.justification = c(1, 0),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top5))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<180 & mode=="DCMSEAL")
dftemp$top10<-'No'
dftemp[dftemp$Rank<20,'top10']<-'Yes'
dftemp$nhidden<-as.factor(dftemp$params_num_hidden_layers)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top5))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<180 & mode=="DCMSEAL")
dftemp$top10<-'No'
dftemp[dftemp$Rank<20,'top10']<-'Yes'
dftemp$nhidden<-as.factor(dftemp$params_num_hidden_layers)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim=c(0.27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim=c(0.27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
# Figure 8 boxplot spatial vs model
dftemp<-df %>% filter(Rank<180 & mode=="DCMSEAL")
dftemp$top10<-'No'
dftemp[dftemp$Rank<20,'top10']<-'Yes'
dftemp$nhidden<-as.factor(dftemp$params_num_hidden_layers)
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim=c(0.27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(c(0,27,0.32))
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(c(0,27,0.32))+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0,27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0,27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.27,0.32)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.275,0.315)+
scale_x_log10()+geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.275,0.315)+
scale_x_log10()+scale_y_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+scale_y_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+#ylim(0.275,0.315)+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.275,0.29)+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+#ylim(0.275,0.29)+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.275,0.28)+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
p<-ggplot(dftemp,aes(x=params_updates_per_epoch,y=value,shape=nhidden,color=top10))+
xlab("Minibatch updates per epoch")+ylab("Validation accuracy")+theme_bw()+ylim(0.275,0.285)+
scale_x_log10()+
geom_point(size=2)+facet_wrap(~factor(params_embedding_mode),ncol = 2)+
theme(legend.title       = element_text(face = "bold",size = rel(0.8)),
legend.text        = element_text(size = rel(0.8)),
legend.key.size    = unit(0.8, "lines"),
legend.key.height  = unit(0.8, "lines"),
legend.key.width   = unit(0.8, "lines"),
legend.spacing     = unit(0.4, "lines"),
legend.margin      = margin(2, 2, 2, 2),
legend.position = c(0.55, 0.98),
legend.justification = c(0, 1),
legend.background = element_rect(fill = scales::alpha("white", 0.7), ,color='black'),
strip.text.x = element_text(face = "bold",size = 10))
p
View(df)
View(df)
dftemp<-df %>% filter(Rank<100)
p<-ggplot(dftemp,aes(x=params_weight_decay_embedding,y=params_weight_decay_segmentation,shape=mode,color=value))+
scale_x_log10()+scale_y_log10()+geom_point(size=2)+theme(legend.position = c(0.55, 0.98),legend.justification = c(0, 1))
p
p<-ggplot(dftemp,aes(x=params_weight_decay_embedding,y=params_weight_decay_segmentation,shape=mode,color=value))+
scale_x_log10()+scale_y_log10()+geom_point(size=2)+theme(legend.position = 'top',legend.justification = c(0, 1))
p
p<-ggplot(dftemp,aes(x=params_weight_decay_embedding,y=params_weight_decay_segmentation,shape=mode,color=value))+
scale_color_viridis_c()+scale_x_log10()+scale_y_log10()+geom_point(size=2)+
theme(legend.position = 'top',legend.justification = c(0, 1))
p
dftemp$segmetation_dropout<-dftemp$params_segmentation_dropout_rate
p<-ggplot(dftemp,aes(x=params_weight_decay_embedding,y=segmetation_dropout,shape=mode,color=value))+
scale_color_viridis_c()+scale_x_log10()+geom_point(size=2)+
theme(legend.position = 'top',legend.justification = c(0, 1))
p
p<-ggplot(dftemp,aes(x=params_weight_decay_segmentation,y=params_weight_decay_segmentation,shape=mode,color=value))+
scale_color_viridis_c()+scale_x_log10()+scale_y_log10()+geom_point(size=2)+
theme(legend.position = 'top',legend.justification = c(0, 1))
p
p<-ggplot(dftemp,aes(x=params_weight_decay_segmentation,y=segmetation_dropout,shape=mode,color=value))+
scale_color_viridis_c()+scale_x_log10()+geom_point(size=2)+
theme(legend.position = 'top',legend.justification = c(0, 1))
p
